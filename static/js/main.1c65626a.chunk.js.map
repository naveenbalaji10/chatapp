{"version":3,"sources":["components/colorpanel/colorpanel.js","firebase.js","components/sidepanel/userpanel.js","actions/actiontypes.js","actions/index.js","components/sidepanel/channels.js","components/sidepanel/directMessages.js","components/sidepanel/sidepanel.js","components/messages/messageHeader.js","components/messages/FileModal.js","components/messages/progressbar.js","components/messages/messageform.js","components/messages/message.js","components/messages/messages.js","components/metapanel/metapanel.js","components/App.js","reportWebVitals.js","components/Auth/login.js","components/Auth/register.js","reducers/index.js","spinner.js","index.js"],"names":["Colorpanel","Sidebar","as","Menu","icon","inverted","vertical","visible","width","Divider","Button","size","color","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Userpanel","state","user","props","currentUser","Dropdownoptions","key","text","displayName","disabled","onClick","handleSignout","auth","signOut","then","console","log","this","Grid","style","background","Column","Row","padding","margin","Header","floated","Icon","name","Content","Dropdown","trigger","Image","src","photoURL","spaced","avatar","options","SET_USER","SIGN_OUT_USER","SET_CURRENT_CHANNEL","SET_PRIVATE_CHANNEL","setCurrentChannel","channel","type","actionsTypes","payload","currentChannel","setPrivateChannel","isPrivateChannel","Channels","notifications","messageRef","database","ref","activeChannel","firstLoad","channels","channelName","channelDetails","modal","channelRef","removeListener","off","addListener","loadedChannels","on","snap","push","val","setState","setFirstChannel","addNotificationsListener","channelId","handleNotifications","id","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","firstChannel","length","setActiveChannel","handleSubmit","event","preventDefault","isFormValid","addChannel","newChannel","details","createdBy","child","update","closeModal","catch","err","error","openModal","handleChange","target","value","changeChannel","clearNotifications","updatedNotifications","getNotificationCount","forEach","displayChannels","map","Item","active","opacity","Label","Fragment","className","Modal","basic","open","onClose","Form","onSubmit","Field","Input","fluid","label","onChange","Actions","connect","DirectMessages","users","usersRef","connectedRef","presenceRef","addListeners","currentUserUid","loadedUsers","set","onDisconnect","remove","addStatusTousers","userId","connected","updatedUsers","reduce","acc","uid","concat","IsUserOnline","status","channelData","getUserId","currentUserId","fontStyle","italic","Sidepanel","fixed","fontSize","MessageHeader","numUniqueUsers","handleSearchChange","searchLoading","Segment","clearing","marginBottom","Subheader","loading","placeholder","FileModal","file","authorized","addFile","files","sendFile","uploadFile","isAuthorized","contentType","mime","lookup","clearFile","filename","includes","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","MessageForm","uploadTask","storageRef","storage","message","errors","getPath","metadata","pathToUpload","getMessageRefs","filePath","uuidv4","put","Math","round","bytesTransferred","totalBytes","isProgressBar","snapshot","getDownloadURL","downloadurl","sendFileMessage","fileUrl","createMessage","timestamp","ServerValue","TIMESTAMP","sendMessage","labelPosition","some","Group","widths","content","React","isOwnMessage","isImage","hasOwnProperty","Message","Comment","Avatar","Author","Metadata","moment","fromNow","image","Text","Messages","privateChannel","privateMessagesRef","messages","messagesLoading","progressBar","searchTerm","searchResults","addMessageListener","loadedMessages","countUniqueUsers","uniqueUsers","plural","displayMessages","displayChannel","handleSearchMessage","channelMessages","regex","RegExp","match","setTimeout","Metapanel","columns","marginLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Login","email","password","isFormvalid","signInWithEmailAndPassword","signedInUser","erros","displayErrors","i","inputName","toLowerCase","textAlign","verticalAlign","maxWidth","stacked","iconPosition","handleInputError","to","Register","username","passwordConfirmation","userRef","isFormEmpty","isPasswordValid","createUserWithEmailAndPassword","createdUser","updateProfile","md5","saveUser","INITIAL_STATE","isLoading","INITIAL_CHANNEL_STATE","rootReducer","combineReducers","action","actionTypes","Spinner","Dimmer","Loader","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","exact","path","component","App","RootWithAuth","withRouter","ReactDOM","render","document","getElementById"],"mappings":"mQAqBeA,EAlBf,4JACE,WACE,OACE,eAACC,EAAA,EAAD,CACEC,GAAIC,IACJC,KAAK,UACLC,UAAQ,EACRC,UAAQ,EACRC,SAAO,EACPC,MAAM,YANR,UAQE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQN,KAAK,MAAMO,KAAK,QAAQC,MAAM,gBAZ9C,GAAgCC,a,iECY9BC,IAASC,cAVY,CACrBC,OAAQ,0CACRC,WAAY,0CACZC,YAAa,oFACbC,UAAW,0BACXC,cAAe,sCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKAT,QAAf,ECoCaU,EAjDf,4MACEC,MAAM,CACJC,KAAM,EAAKC,MAAMC,aAFrB,EAIIC,gBAAgB,iBAAI,CACpB,CACEC,IAAK,OACLC,KAAM,iDAAmB,iCAAS,EAAKN,MAAMC,KAAKM,iBAClDC,UAAU,GAEZ,CACIH,IAAI,SACJC,KAAK,kDAET,CACID,IAAI,UACJC,KAAK,sBAAMG,QAAS,EAAKC,cAApB,yBAhBb,EAoBAA,cAAc,WACdrB,EAASsB,OAAOC,UACfC,MAAK,kBAAIC,QAAQC,IAAI,kBAtBtB,4CAwBI,WACE,IAAOd,EAAOe,KAAKhB,MAAZC,KACL,OACE,cAACgB,EAAA,EAAD,CAAMC,MAAO,CAACC,WAAY,WAA1B,SACE,cAACF,EAAA,EAAKG,OAAN,UACA,eAACH,EAAA,EAAKI,IAAN,CAAUH,MAAO,CAACI,QAAQ,QAAQC,OAAO,GAAzC,UACG,eAACC,EAAA,EAAD,CAAQ5C,UAAQ,EAAC6C,QAAQ,OAAOhD,GAAG,KAAnC,UACI,cAACiD,EAAA,EAAD,CAAMC,KAAK,SACX,cAACH,EAAA,EAAOI,QAAR,yBAEP,cAACJ,EAAA,EAAD,CAAQN,MAAO,CAACI,QAAQ,UAAW7C,GAAG,KAAKG,UAAQ,EAAnD,SACG,cAACiD,EAAA,EAAD,CAAUC,QACV,iCACE,cAACC,EAAA,EAAD,CAAOC,IAAK/B,EAAKgC,SAAUC,OAAO,QAAQC,QAAM,IAChDlC,EAAKM,eAEL6B,QAASpB,KAAKZ,iCAxC/B,GAA+BhB,a,4DCLlBiD,EAAW,WACXC,EAAgB,gBAChBC,EAAsB,sBACtBC,EAAsB,sBCctBC,EAAoB,SAACC,GAChC,MAAO,CACLC,KAAMC,EACNC,QAAS,CACPC,eAAgBJ,KAKTK,EAAoB,SAACC,GAChC,MAAO,CACLL,KAAMC,EACNC,QAAS,CACPG,sBChBAC,E,4MACJjD,MAAQ,CACN0C,QAAS,KACTQ,cAAe,GACfC,WAAY9D,EAAS+D,WAAWC,IAAI,YACpCC,cAAe,GACfC,WAAW,EACXC,SAAU,GACVC,YAAa,GACbC,eAAgB,GAChBC,OAAO,EACPC,WAAYvE,EAAS+D,WAAWC,IAAI,YACpCpD,KAAM,EAAKC,MAAMC,a,EAYnB0D,eAAiB,WACf,EAAK7D,MAAM4D,WAAWE,O,EAGxBC,YAAc,WACZ,IAAIC,EAAiB,GACrB,EAAKhE,MAAM4D,WAAWK,GAAG,eAAe,SAACC,GACvCF,EAAeG,KAAKD,EAAKE,OACzB,EAAKC,SAAS,CAAEb,SAAUQ,IAAkB,kBAAM,EAAKM,qBACvD,EAAKC,yBAAyBL,EAAK7D,S,EAGvCkE,yBAA2B,SAACC,GAC1B,EAAKxE,MAAMmD,WAAWc,GAAG,SAAS,SAACC,GAC7B,EAAKlE,MAAM0C,SACb,EAAK+B,oBACHD,EACA,EAAKxE,MAAM0C,QAAQgC,GACnB,EAAK1E,MAAMkD,cACXgB,O,EAMRO,oBAAsB,SAACD,EAAWG,EAAkBzB,EAAegB,GACjE,IAAIU,EAAY,EACZC,EAAQ3B,EAAc4B,WACxB,SAACC,GAAD,OAAkBA,EAAaL,KAAOF,MAGzB,IAAXK,GACEL,IAAcG,IAChBC,EAAY1B,EAAc2B,GAAOG,MAC7Bd,EAAKe,cAAgBL,EAAY,IACnC1B,EAAc2B,GAAOK,MAAQhB,EAAKe,cAAgBL,IAGtD1B,EAAc2B,GAAOM,eAAiBjB,EAAKe,eAE3C/B,EAAciB,KAAK,CACjBO,GAAIF,EACJQ,MAAOd,EAAKe,cACZE,eAAgBjB,EAAKe,cACrBC,MAAO,IAGX,EAAKb,SAAS,CAAEnB,mB,EAGlBoB,gBAAkB,WAChB,MAAgC,EAAKtE,MAA7BuD,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SACb4B,EAAe5B,EAAS,GAC1BD,GAAaC,EAAS6B,OAAS,IACjC,EAAKnF,MAAMuC,kBAAkB2C,GAC7B,EAAKE,iBAAiBF,GACtB,EAAKf,SAAS,CAAE3B,QAAS0C,KAE3B,EAAKf,SAAS,CAAEd,WAAW,K,EAG7BgC,aAAe,SAACC,GACdA,EAAMC,iBACF,EAAKC,YAAY,EAAK1F,QACxB,EAAK2F,c,EAITA,WAAa,WACX,MAA0D,EAAK3F,MAAvD4D,EAAR,EAAQA,WAAYH,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,eAAgBzD,EAAjD,EAAiDA,KAC3CI,EAAMuD,EAAWO,OAAO9D,IACxBuF,EAAa,CACjBlB,GAAIrE,EACJsB,KAAM8B,EACNoC,QAASnC,EACToC,UAAW,CACTnE,KAAM1B,EAAKM,YACX4B,OAAQlC,EAAKgC,WAGjB2B,EACGmC,MAAM1F,GACN2F,OAAOJ,GACP/E,MAAK,WACJ,EAAKwD,SAAS,CAAEZ,YAAa,GAAIC,eAAgB,KACjD,EAAKuC,aACLnF,QAAQC,IAAI,oBAEbmF,OAAM,SAACC,GACNrF,QAAQsF,MAAMD,O,EAIpBT,YAAc,gBAAGjC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,eAAhB,OACZD,GAAeC,G,EAEjB2C,UAAY,WACV,EAAKhC,SAAS,CAAEV,OAAO,K,EAGzBsC,WAAa,WACX,EAAK5B,SAAS,CAAEV,OAAO,K,EAGzB2C,aAAe,SAACd,GACd,EAAKnB,SAAL,eAAiBmB,EAAMe,OAAO5E,KAAO6D,EAAMe,OAAOC,S,EAGpDC,cAAgB,SAAC/D,GACf,EAAKgE,qBACL,EAAKpB,iBAAiB5C,GACtB,EAAKxC,MAAMuC,kBAAkBC,GAC7B,EAAKxC,MAAM6C,mBAAkB,GAC7B,EAAKsB,SAAS,CAAE3B,a,EAGlBgE,mBAAqB,WACnB,IAAI7B,EAAQ,EAAK7E,MAAMkD,cAAc4B,WACnC,SAACC,GAAD,OAAkBA,EAAaL,KAAO,EAAK1E,MAAM0C,QAAQgC,MAE3D,IAAe,IAAXG,EAAc,CAChB,IAAI8B,EAAoB,YAAO,EAAK3G,MAAMkD,eAC1CyD,EAAqB9B,GAAOG,MAAQ,EAAKhF,MAAMkD,cAAc2B,GAAOG,MACpE2B,EAAqB9B,GAAOK,MAAQ,EACpC,EAAKb,SAAS,CAAEnB,cAAeyD,M,EAInCrB,iBAAmB,SAAC5C,GAClB,EAAK2B,SAAS,CAAEf,cAAeZ,EAAQgC,M,EAGzCkC,qBAAuB,SAAClE,GACtB,IAAIwC,EAAQ,EAMZ,GALA,EAAKlF,MAAMkD,cAAc2D,SAAQ,SAAC9B,GAC5BA,EAAaL,KAAOhC,EAAQgC,KAC9BQ,EAAQH,EAAaG,UAGrBA,EAAQ,EACV,OAAOA,G,EAKX4B,gBAAkB,SAACtD,GAAD,OAChBA,EAAS6B,OAAS,GAClB7B,EAASuD,KAAI,SAACrE,GAAD,OACX,eAAChE,EAAA,EAAKsI,KAAN,CAEEC,OAAQvE,EAAQgC,KAAO,EAAK1E,MAAMsD,cAClC3B,KAAMe,EAAQf,KACdlB,QAAS,kBAAM,EAAKgG,cAAc/D,IAClCxB,MAAO,CAAEgG,QAAS,IALpB,UAOG,EAAKN,qBAAqBlE,IACzB,cAACyE,EAAA,EAAD,CAAOhI,MAAM,MAAb,SAAoB,EAAKyH,qBAAqBlE,KAC7C,IATL,IAUIA,EAAQf,OATLe,EAAQgC,Q,uDA7JnB,WACE1D,KAAK+C,gB,kCAGP,WACE/C,KAAK6C,mB,oBAqKP,WACE,MAA4B7C,KAAKhB,MAAzBwD,EAAR,EAAQA,SAAUG,EAAlB,EAAkBA,MAClB,OACE,eAAC,IAAMyD,SAAP,WACE,eAAC1I,EAAA,EAAKA,KAAN,CAAW2I,UAAU,OAArB,UACE,eAAC3I,EAAA,EAAKsI,KAAN,WACE,iCACE,cAACtF,EAAA,EAAD,CAAMC,KAAK,aADb,eAGC,KAJH,IAIU6B,EAAS6B,OAJnB,IAI4B,IAC1B,cAAC3D,EAAA,EAAD,CAAMC,KAAK,MAAMlB,QAASO,KAAKqF,eAEhCrF,KAAK8F,gBAAgBtD,MAGxB,eAAC8D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM7D,EAAO8D,QAASzG,KAAKiF,WAAxC,UACE,cAACqB,EAAA,EAAM9F,OAAP,4BACA,cAAC8F,EAAA,EAAM1F,QAAP,UACE,eAAC8F,EAAA,EAAD,CAAMC,SAAU3G,KAAKuE,aAArB,UACE,cAACmC,EAAA,EAAKE,MAAN,UACE,cAACC,EAAA,EAAD,CACEC,OAAK,EACLnG,KAAK,cACLoG,MAAM,sBACNC,SAAUhH,KAAKsF,iBAGnB,cAACoB,EAAA,EAAKE,MAAN,UACE,cAACC,EAAA,EAAD,CACEC,OAAK,EACLnG,KAAK,iBACLoG,MAAM,oBACNC,SAAUhH,KAAKsF,sBAKvB,eAACgB,EAAA,EAAMW,QAAP,WACE,eAAChJ,EAAA,EAAD,CAAQE,MAAM,QAAQP,UAAQ,EAAC6B,QAASO,KAAKuE,aAA7C,UACE,cAAC7D,EAAA,EAAD,CAAMC,KAAK,cADb,SAIA,eAAC1C,EAAA,EAAD,CAAQE,MAAM,MAAMP,UAAQ,EAAC6B,QAASO,KAAKiF,WAA3C,UACE,cAACvE,EAAA,EAAD,CAAMC,KAAK,WADb,yB,GApOWvC,aA8OR8I,cAAQ,KAAM,CAAEzF,oBAAmBM,qBAAnCmF,CACbjF,G,SCvPWkF,EAAb,4MACEnI,MAAQ,CACNsD,cAAe,GACfrD,KAAM,EAAKC,MAAMC,YACjBiI,MAAO,GACPC,SAAUhJ,EAAS+D,WAAWC,IAAI,SAClCiF,aAAcjJ,EAAS+D,WAAWC,IAAI,mBACtCkF,YAAalJ,EAAS+D,WAAWC,IAAI,aAPzC,EAiBEmF,aAAe,SAACC,GACd,IAAIC,EAAc,GAClB,EAAK1I,MAAMqI,SAASpE,GAAG,eAAe,SAACC,GACrC,GAAIuE,IAAmBvE,EAAK7D,IAAK,CAC/B,IAAIJ,EAAOiE,EAAKE,MAChBnE,EAAI,IAAUiE,EAAK7D,IACnBJ,EAAI,OAAa,UACjByI,EAAYvE,KAAKlE,GACjB,EAAKoE,SAAS,CAAE+D,MAAOM,QAI3B,EAAK1I,MAAMsI,aAAarE,GAAG,SAAS,SAACC,GACnC,IAAmB,IAAfA,EAAKE,MAAgB,CACvB,IAAMf,EAAM,EAAKrD,MAAMuI,YAAYxC,MAAM0C,GACzCpF,EAAIsF,KAAI,GACRtF,EAAIuF,eAAeC,QAAO,SAAC1C,GACb,OAARA,GACFrF,QAAQC,IAAIoF,UAMpB,EAAKnG,MAAMuI,YAAYtE,GAAG,eAAe,SAACC,GACpCuE,IAAmBvE,EAAK7D,KAC1B,EAAKyI,iBAAiB5E,EAAK7D,QAI/B,EAAKL,MAAMuI,YAAYtE,GAAG,iBAAiB,SAACC,GACtCuE,IAAmBvE,EAAK7D,KAC1B,EAAKyI,iBAAiB5E,EAAK7D,KAAK,OAjDxC,EAsDEyI,iBAAmB,SAACC,GAA8B,IAAtBC,IAAqB,yDACzCC,EAAe,EAAKjJ,MAAMoI,MAAMc,QAAO,SAACC,EAAKlJ,GAIjD,OAHIA,EAAKmJ,MAAQL,IACf9I,EAAI,OAAJ,UAAoB+I,EAAY,SAAW,YAEtCG,EAAIE,OAAOpJ,KACjB,IACH,EAAKoE,SAAS,CAAE+D,MAAOa,KA7D3B,EAgEEK,aAAe,SAACrJ,GAAD,MAA0B,WAAhBA,EAAKsJ,QAhEhC,EAkEE9C,cAAgB,SAACxG,GACf,IACMuJ,EAAc,CAClB9E,GAFgB,EAAK+E,UAAUxJ,EAAKmJ,KAGpCzH,KAAM1B,EAAK0B,MAEb,EAAKzB,MAAMuC,kBAAkB+G,GAC7B,EAAKtJ,MAAM6C,mBAAkB,GAC7B,EAAKuC,iBAAiBrF,EAAKmJ,MA1E/B,EA6EE9D,iBAAmB,SAACyD,GAClB,EAAK1E,SAAS,CAAEf,cAAeyF,KA9EnC,EAiFEU,UAAY,SAACV,GACX,IAAMW,EAAgB,EAAK1J,MAAMC,KAAKmJ,IACtC,OAAOL,EAASW,EAAT,UACAX,EADA,YACUW,GADV,UAEAA,EAFA,YAEiBX,IArF5B,uDAUE,WACM/H,KAAKhB,MAAMC,OACbe,KAAKwH,aAAaxH,KAAKhB,MAAMC,KAAKmJ,KAClCtI,QAAQC,IAAIC,KAAKhB,MAAMC,KAAKmJ,QAblC,oBAwFE,WAAU,IAAD,OACP,EAAiCpI,KAAKhB,MAA9BoI,EAAR,EAAQA,MAAO9E,EAAf,EAAeA,cACf,OACE,eAAC5E,EAAA,EAAKA,KAAN,CAAW2I,UAAU,OAArB,UACE,eAAC3I,EAAA,EAAKsI,KAAN,WACE,iCACE,cAACtF,EAAA,EAAD,CAAMC,KAAK,SADb,sBAEQ,IAHV,IAIIyG,EAAM/C,OAJV,OAMC+C,EAAMrB,KAAI,SAAC9G,GAAD,OACT,eAACvB,EAAA,EAAKsI,KAAN,CAEEC,OAAQhH,EAAKmJ,MAAQ9F,EACrB7C,QAAS,WACP,EAAKgG,cAAcxG,IAErBiB,MAAO,CAAEgG,QAAS,GAAKyC,UAAWC,UANpC,UAQE,cAAClI,EAAA,EAAD,CACEC,KAAK,SACLxC,MAAO,EAAKmK,aAAarJ,GAAQ,QAAU,QAV/C,IAYIA,EAAK0B,OAXF1B,EAAKmJ,eApGtB,GAAoChK,aAuHrB8I,cAAQ,KAAM,CAAEzF,oBAAmBM,qBAAnCmF,CACbC,GCrGa0B,EAnBf,4JACE,WACE,IAAQ1J,EAAgBa,KAAKd,MAArBC,YACR,OACE,eAACzB,EAAA,EAAD,CACEQ,KAAK,QACLL,UAAQ,EACRD,UAAQ,EACRkL,MAAM,OACN5I,MAAO,CAAEC,WAAY,UAAW4I,SAAU,UAL5C,UAOE,cAAC,EAAD,CAAW5J,YAAaA,IACxB,cAAC,EAAD,CAAUA,YAAaA,IACvB,cAAC,EAAD,CAAgBA,YAAaA,WAbrC,GAA+Bf,a,kBC8BhB4K,EAlCf,4JACE,WACE,MAMIhJ,KAAKd,MALPuD,EADF,EACEA,YACAwG,EAFF,EAEEA,eACAC,EAHF,EAGEA,mBACAC,EAJF,EAIEA,cACAnH,EALF,EAKEA,iBAEF,OACE,eAACoH,EAAA,EAAD,CAASC,UAAQ,EAAjB,UACE,eAAC7I,EAAA,EAAD,CAAQsG,MAAM,OAAOrJ,GAAG,KAAKgD,QAAQ,OAAOP,MAAO,CAAEoJ,aAAc,GAAnE,UACE,iCACG7G,GACCT,GAAoB,cAACtB,EAAA,EAAD,CAAMC,KAAM,eAAgBxC,MAAM,aAE1D,cAACqC,EAAA,EAAO+I,UAAR,UAAmBN,OAGrB,cAACzI,EAAA,EAAD,CAAQC,QAAQ,QAAhB,SACE,cAACoG,EAAA,EAAD,CACE2C,QAASL,EACTxI,KAAK,aACLzC,KAAK,OACLP,KAAK,SACL8L,YAAY,kBACZzC,SAAUkC,aA1BtB,GAAmC9K,a,kBC6DpBsL,EA3Df,4MACE1K,MAAQ,CACN2K,KAAM,KACNC,WAAY,CAAC,aAAc,cAH/B,EAMEC,QAAU,SAACrF,GACT,IAAMmF,EAAOnF,EAAMe,OAAOuE,MAAM,GAC5BH,GACF,EAAKtG,SAAS,CAAEsG,UATtB,EAaEI,SAAW,WACT,IAAQJ,EAAS,EAAK3K,MAAd2K,KACR,EAAmC,EAAKzK,MAAhC8K,EAAR,EAAQA,WAAY/E,EAApB,EAAoBA,WAEP,OAAT0E,IACE,EAAKM,aAAaN,EAAKhJ,QAEzBqJ,EAAWL,EADM,CAAEO,YAAaC,IAAKC,OAAOT,EAAKhJ,QAEjDsE,IACA,EAAKoF,eAtBb,EA2BEJ,aAAe,SAACK,GAAD,OACb,EAAKtL,MAAM4K,WAAWW,SAASJ,IAAKC,OAAOE,KA5B/C,EA8BED,UAAY,kBAAM,EAAKhH,SAAS,CAAEsG,KAAM,QA9B1C,4CA+BE,WACE,MAA8B3J,KAAKd,MAA3ByD,EAAR,EAAQA,MAAOsC,EAAf,EAAeA,WACf,OACE,eAACqB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM7D,EAAO8D,QAASxB,EAAnC,UACE,cAACqB,EAAA,EAAM9F,OAAP,mCACA,cAAC8F,EAAA,EAAM1F,QAAP,UACE,cAACiG,EAAA,EAAD,CACEG,SAAUhH,KAAK6J,QACf9C,MAAM,uBACND,OAAK,EACLnF,KAAK,OACLhB,KAAK,WAGT,eAAC2F,EAAA,EAAMW,QAAP,WACE,eAAChJ,EAAA,EAAD,CAAQE,MAAM,QAAQP,UAAQ,EAAC6B,QAASO,KAAK+J,SAA7C,UACE,cAACrJ,EAAA,EAAD,CAAMC,KAAK,cADb,UAIA,eAAC1C,EAAA,EAAD,CAAQE,MAAM,MAAMP,UAAQ,EAAC6B,QAASwF,EAAtC,UACE,cAACvE,EAAA,EAAD,CAAMC,KAAK,WADb,uBAlDV,GAA+BvC,a,SCUhBoM,EAZK,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,gBAAhB,MACF,cAAhBD,GACE,cAACE,EAAA,EAAD,CACEtE,UAAU,gBACVuE,QAASF,EACTG,UAAQ,EACRC,YAAU,EACV5M,KAAK,SACLN,UAAQ,K,kBCyLCmN,G,4MA5Lb/L,MAAQ,CACNyL,YAAa,GACbO,WAAY,KACZC,WAAY5M,EAAS6M,UAAU7I,MAC/BqI,gBAAiB,EACjBS,QAAS,GACTzJ,QAAS,EAAKxC,MAAM4C,eACpB7C,KAAM,EAAKC,MAAMC,YACjBqK,SAAS,EACT4B,OAAQ,GACRzI,OAAO,G,EAGT0I,QAAU,WACR,GAAI,EAAKnM,MAAM8C,iBACb,MAAM,gBAAN,OAAuB,EAAKhD,MAAM0C,QAAQgC,K,EAM9CsG,WAAa,SAACL,EAAM2B,GAClB,IAAMC,EAAe,EAAKvM,MAAM0C,QAAQgC,GAClCrB,EAAM,EAAKnD,MAAMsM,iBACjBC,EAAQ,UAAM,EAAKJ,UAAX,YAAwBK,MAAxB,QAEd,EAAKrI,SACH,CACEoH,YAAa,YACbO,WAAY,EAAKhM,MAAMiM,WAAWlG,MAAM0G,GAAUE,IAAIhC,EAAM2B,KAE9D,WACE,EAAKtM,MAAMgM,WAAW/H,GACpB,iBACA,SAACC,GACC,IAAMwH,EACkD,IAAtDkB,KAAKC,MAAM3I,EAAK4I,iBAAmB5I,EAAK6I,YAC1C,EAAK7M,MAAM8M,cAActB,GACzB,EAAKrH,SAAS,CAAEqH,uBAElB,SAACvF,GACCrF,QAAQC,IAAIoF,GACZ,EAAK9B,SAAS,CACZ+H,OAAQ,EAAKpM,MAAMoM,OAAO/C,OAAOlD,GACjCsF,YAAa,QACbO,WAAY,UAGhB,WACE,EAAKhM,MAAMgM,WAAWiB,SAAS5J,IAC5B6J,iBACArM,MAAK,SAACsM,GACL,EAAKC,gBAAgBD,EAAaZ,EAAclJ,MAEjD6C,OAAM,SAACC,GACNrF,QAAQsF,MAAMD,GACd,EAAK9B,SAAS,CACZ+H,OAAQ,EAAKpM,MAAMoM,OAAO/C,OAAOlD,GACjCsF,YAAa,QACbO,WAAY,iB,EAS5BoB,gBAAkB,SAACC,EAASd,EAAclJ,GACxCA,EACG0C,MAAMwG,GACNpI,OACAwE,IAAI,EAAK2E,cAAcD,IACvBxM,MAAK,WACJ,EAAKwD,SAAS,CAAEoH,YAAa,YAE9BvF,OAAM,SAACC,GACNrF,QAAQsF,MAAMD,GACd,EAAK9B,SAAS,CACZ+H,OAAQ,EAAKpM,MAAMoM,OAAO/C,OAAOlD,S,EAKzCE,UAAY,kBAAM,EAAKhC,SAAS,CAAEV,OAAO,K,EACzCsC,WAAa,kBAAM,EAAK5B,SAAS,CAAEV,OAAO,K,EAE1C2C,aAAe,SAACd,GACd,EAAKnB,SAAL,eAAiBmB,EAAMe,OAAO5E,KAAO6D,EAAMe,OAAOC,S,EAGpD8G,cAAgB,WAAqB,IAApBD,EAAmB,uDAAT,KACnBlB,EAAU,CACdoB,UAAWlO,EAAS+D,SAASoK,YAAYC,UACzCxN,KAAM,CACJyE,GAAI,EAAK1E,MAAMC,KAAKmJ,IACpBzH,KAAM,EAAK3B,MAAMC,KAAKM,YACtB4B,OAAQ,EAAKnC,MAAMC,KAAKgC,WAQ5B,OALgB,OAAZoL,EACFlB,EAAO,MAAYkB,EAEnBlB,EAAO,QAAc,EAAKnM,MAAMmM,QAE3BA,G,EAGTuB,YAAc,WACZ,IAAQlB,EAAmB,EAAKtM,MAAxBsM,eACR,EAA6B,EAAKxM,MAA1BmM,EAAR,EAAQA,QAASzJ,EAAjB,EAAiBA,QAEbyJ,GACF,EAAK9H,SAAS,CAAEmG,SAAS,IACzBgC,IACGzG,MAAMrD,EAAQgC,IACdP,OACAwE,IAAI,EAAK2E,iBACTzM,MAAK,WACJ,EAAKwD,SAAS,CAAEmG,SAAS,EAAO2B,QAAS,GAAIC,OAAQ,QAEtDlG,OAAM,SAACC,GACNrF,QAAQsF,MAAMD,GACd,EAAK9B,SAAS,CACZmG,SAAS,EACT4B,OAAQ,EAAKpM,MAAMoM,OAAO/C,OAAOlD,SAIvC,EAAK9B,SAAS,CACZ+H,OAAQ,EAAKpM,MAAMoM,OAAO/C,OAAO,CAAE8C,QAAS,qB,4CAKlD,WACE,MACEnL,KAAKhB,MADCoM,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,QAAS3B,EAAzB,EAAyBA,QAAS7G,EAAlC,EAAkCA,MAAO8H,EAAzC,EAAyCA,YAAaC,EAAtD,EAAsDA,gBAGtD,OACE,eAACtB,EAAA,EAAD,CAAS/C,UAAU,gBAAnB,UACE,cAACQ,EAAA,EAAD,CACEC,OAAK,EACLnG,KAAK,UACLqG,SAAUhH,KAAKsF,aACfE,MAAO2F,EACPjL,MAAO,CAAEoJ,aAAc,SACvBvC,MAAO,cAAC9I,EAAA,EAAD,CAAQN,KAAM,QACrBgP,cAAc,OACdtG,UACE+E,EAAOwB,MAAK,SAACxH,GAAD,OAAWA,EAAM+F,QAAQZ,SAAS,cAC1C,QACA,GAENd,YAAY,uBAEd,eAACxL,EAAA,EAAO4O,MAAR,CAAclP,MAAI,EAACmP,OAAO,IAA1B,UACE,cAAC7O,EAAA,EAAD,CACEwB,QAASO,KAAK0M,YACdlN,SAAUgK,EACVrL,MAAM,SACN4O,QAAQ,YACRJ,cAAc,OACdhP,KAAK,SAEP,cAACM,EAAA,EAAD,CACEE,MAAM,OACNsB,QAASO,KAAKqF,UACd7F,SAAwB,cAAdiL,EACVsC,QAAQ,eACRJ,cAAc,QACdhP,KAAK,oBAGT,cAAC,EAAD,CACEqM,WAAYhK,KAAKgK,WACjBrH,MAAOA,EACPsC,WAAYjF,KAAKiF,aAEnB,cAAC,EAAD,CACEwF,YAAaA,EACbC,gBAAiBA,W,GAtLDsC,IAAM5O,W,qBCF1B6O,GAAe,SAAC9B,EAASlM,GAC7B,OAAOkM,EAAQlM,KAAKyE,KAAOzE,EAAKmJ,IAAM,eAAiB,IAEnD8E,GAAU,SAAC/B,GACf,OAAOA,EAAQgC,eAAe,WAAahC,EAAQgC,eAAe,YAkBrDC,GAdC,SAAC,GAAD,IAFKb,EAEFpB,EAAH,EAAGA,QAASlM,EAAZ,EAAYA,KAAZ,OACd,eAACoO,EAAA,EAAD,WACE,cAACA,EAAA,EAAQC,OAAT,CAAgBtM,IAAKmK,EAAQlM,KAAKkC,SAClC,eAACkM,EAAA,EAAQzM,QAAT,CAAiByF,UAAW4G,GAAa9B,EAASlM,GAAlD,UACE,cAACoO,EAAA,EAAQE,OAAT,CAAgB9P,GAAG,IAAnB,SAAwB0N,EAAQlM,KAAK0B,OACrC,cAAC0M,EAAA,EAAQG,SAAT,WAPejB,EAOgBpB,EAAQoB,UAPVkB,KAAOlB,GAAWmB,aAQ9CR,GAAQ/B,GACP,cAACpK,EAAA,EAAD,CAAOC,IAAKmK,EAAQwC,MAAOtH,UAAU,kBAErC,cAACgH,EAAA,EAAQO,KAAT,UAAezC,EAAQ4B,iBCqIhBc,GAnJf,4MACE7O,MAAQ,CACN8O,eAAgB,EAAK5O,MAAM8C,iBAC3B+L,mBAAoB1P,EAAS+D,WAAWC,IAAI,mBAC5CF,WAAY9D,EAAS+D,WAAWC,IAAI,YACpCX,QAAS,EAAKxC,MAAM4C,eACpB7C,KAAM,EAAKC,MAAMC,YACjB6O,SAAU,GACVC,iBAAiB,EACjBC,aAAa,EACbjF,eAAgB,GAChBkF,WAAY,GACZhF,eAAe,EACfiF,cAAe,IAbnB,EAuBE5G,aAAe,SAAChE,GACd,EAAK6K,mBAAmB7K,IAxB5B,EA2BE6K,mBAAqB,SAAC7K,GACpB,IAAI8K,EAAiB,GACT,EAAK9C,iBACbzG,MAAMvB,GAAWP,GAAG,eAAe,SAACC,GACtCoL,EAAenL,KAAKD,EAAKE,OACzB,EAAKC,SAAS,CAAE2K,SAAUM,EAAgBL,iBAAiB,IAC3D,EAAKM,iBAAiBD,OAjC5B,EAqCE9C,eAAiB,WACf,MAA2D,EAAKxM,MAAxDmD,EAAR,EAAQA,WAAY4L,EAApB,EAAoBA,mBACpB,OADA,EAAwCD,eAChBC,EAAqB5L,GAvCjD,EA0CEoM,iBAAmB,SAACP,GAClB,IAAMQ,EAAcR,EAAS9F,QAAO,SAACC,EAAKgD,GAIxC,OAHKhD,EAAIoC,SAASY,EAAQlM,KAAK0B,OAC7BwH,EAAIhF,KAAKgI,EAAQlM,KAAK0B,MAEjBwH,IACN,IACGsG,EAASD,EAAYnK,OAAS,GAA4B,IAAvBmK,EAAYnK,OAC/C4E,EAAc,UAAMuF,EAAYnK,OAAlB,gBAAgCoK,EAAS,IAAM,IACnE,EAAKpL,SAAS,CAAE4F,oBAnDpB,EAsDEyF,gBAAkB,SAACV,GAAD,OAChBA,EAAS3J,OAAS,GAClB2J,EAASjI,KAAI,SAACoF,GAAD,OACX,cAAC,GAAD,CAEElM,KAAM,EAAKD,MAAMC,KACjBkM,QAASA,GAFJA,EAAQoB,eA1DrB,EAgEEP,cAAgB,SAACpB,GACXA,EAAU,GACZ,EAAKvH,SAAS,CAAE6K,aAAa,KAlEnC,EAsEES,eAAiB,SAACjN,GAChB,OAAOA,EAAO,UACP,EAAK1C,MAAM8O,eAAiB,IAAM,KAD3B,OACiCpM,EAAQf,MACnD,IAzER,EA4EEuI,mBAAqB,SAAC1E,GACpB,EAAKnB,SACH,CACE8K,WAAY3J,EAAMe,OAAOC,MACzB2D,eAAe,IAEjB,WACE,EAAKyF,0BAnFb,EAwFEA,oBAAsB,WACpB,IAAMC,EAAe,YAAO,EAAK7P,MAAMgP,UACjCc,EAAQ,IAAIC,OAAO,EAAK/P,MAAMmP,WAAY,MAC1CC,EAAgBS,EAAgB3G,QAAO,SAACC,EAAKgD,GAOjD,OALGA,EAAQ4B,SAAW5B,EAAQ4B,QAAQiC,MAAMF,IAC1C3D,EAAQlM,KAAK0B,KAAKqO,MAAMF,KAExB3G,EAAIhF,KAAKgI,GAEJhD,IACN,IACH,EAAK9E,SAAS,CAAE+K,kBAChBa,YAAW,WACT,EAAK5L,SAAS,CAAE8F,eAAe,MAC9B,MAvGP,uDAgBE,WACE,MAA0BnJ,KAAKhB,MAAvB0C,EAAR,EAAQA,QAASzC,EAAjB,EAAiBA,KAEbyC,GAAWzC,GACbe,KAAKwH,aAAa9F,EAAQgC,MApBhC,oBA0GE,WACE,MAUI1D,KAAKhB,MATPmD,EADF,EACEA,WACAT,EAFF,EAEEA,QACAzC,EAHF,EAGEA,KACA+O,EAJF,EAIEA,SACA/E,EALF,EAKEA,eACAkF,EANF,EAMEA,WACAC,EAPF,EAOEA,cACAjF,EARF,EAQEA,cACA2E,EATF,EASEA,eAEF,OACE,eAAC,IAAM1H,SAAP,WACE,cAAC,EAAD,CACE3D,YAAazC,KAAK2O,eAAejN,GACjCuH,eAAgBA,EAChBC,mBAAoBlJ,KAAKkJ,mBACzBC,cAAeA,EACfnH,iBAAkB8L,IAEpB,cAAC1E,EAAA,EAAD,UACE,cAACiE,EAAA,EAAQR,MAAT,CAAexG,UAAU,WAAzB,SACG8H,EACGnO,KAAK0O,gBAAgBN,GACrBpO,KAAK0O,gBAAgBV,OAG7B,cAAC,GAAD,CACE7L,WAAYA,EACZL,eAAgBJ,EAChBvC,YAAaF,EACb+M,cAAehM,KAAKgM,cACpBhK,iBAAkB8L,EAClBtC,eAAgBxL,KAAKwL,wBA5I/B,GAA8BpN,aCKf8Q,GAVf,4JACI,WACI,OACI,gDAHZ,GAA+B9Q,aC+BhB8I,gBALS,SAAClI,GAAD,MAAY,CAClCG,YAAaH,EAAMC,KAAKE,YACxB2C,eAAgB9C,EAAM0C,QAAQI,eAC9BE,iBAAkBhD,EAAM0C,QAAQM,oBAEnBkF,EAvBH,SAAC,GAAD,IAAG/H,EAAH,EAAGA,YAAa2C,EAAhB,EAAgBA,eAAgBE,EAAhC,EAAgCA,iBAAhC,OACV,eAAC/B,EAAA,EAAD,CAAMkP,QAAQ,QAAQ9I,UAAU,MAAMnG,MAAO,CAAEC,WAAY,QAA3D,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAA+ChB,YAAaA,GAA5CA,GAAeA,EAAYuE,IAC3C,cAACzD,EAAA,EAAKG,OAAN,CAAaF,MAAO,CAAEkP,WAAY,KAAlC,SACE,cAAC,GAAD,CAEEtN,eAAgBA,EAChB3C,YAAaA,EACb6C,iBAAkBA,GAHbF,GAAkBA,EAAe4B,MAM1C,cAACzD,EAAA,EAAKG,OAAN,CAAarC,MAAO,EAApB,SACE,cAAC,GAAD,YCXSsR,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1P,MAAK,YAAkD,IAA/C2P,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,mBCsECO,GAtEf,4MACI7Q,MAAM,CACF8Q,MAAM,GACNC,SAAS,GACT3E,OAAO,GACP5B,SAAS,GALjB,EAQIlE,aAAa,SAACd,GACV,EAAKnB,SAAL,eAAgBmB,EAAMe,OAAO5E,KAAO6D,EAAMe,OAAOC,SATzD,EAgBIwK,YAAY,gBAAEF,EAAF,EAAEA,MAAMC,EAAR,EAAQA,SAAR,OAAqBD,GAASC,GAhB9C,EAkBIxL,aAAa,SAAAC,GACTA,EAAMC,iBACH,EAAKuL,YAAY,EAAKhR,SACrB,EAAKqE,SAAS,CAAC+H,OAAO,GAAG5B,SAAS,IAClCnL,EAASsB,OACRsQ,2BAA2B,EAAKjR,MAAM8Q,MAAM,EAAK9Q,MAAM+Q,UACvDlQ,MAAK,SAAAqQ,GACFpQ,QAAQC,IAAImQ,MAEfhL,OAAM,SAAAC,GACHrF,QAAQsF,MAAMD,GACd,EAAK9B,SAAS,CAAC8M,MAAQ,EAAKnR,MAAMoM,OAAO/C,OAAOlD,GAAKqE,SAAQ,SA7B7E,EAiCI4G,cAAe,SAAAhF,GAAM,OACjBA,EAAOrF,KAAI,SAACX,EAAMiL,GAAP,OAAY,4BAAYjL,EAAM+F,SAAVkF,OAlCvC,sDAYI,SAAiBjF,EAAOkF,GACrB,OAAQlF,EAAOwB,MAAK,SAAAxH,GAAK,OAAEA,EAAM+F,QAAQoF,cAAchG,SAAS+F,MAAc,QAAU,KAb/F,oBAqCQ,WACI,MAAuCtQ,KAAKhB,MAArC8Q,EAAP,EAAOA,MAAMC,EAAb,EAAaA,SAAS3E,EAAtB,EAAsBA,OAAO5B,EAA7B,EAA6BA,QAC7B,OACA,cAACvJ,EAAA,EAAD,CAAMuQ,UAAU,SAASC,cAAc,SAASpK,UAAU,MAA1D,SACE,eAACpG,EAAA,EAAKG,OAAN,CAAaF,MAAO,CAACwQ,SAAS,KAA9B,UACC,eAAClQ,EAAA,EAAD,CAAQ/C,GAAG,KAAKE,MAAI,EAACQ,MAAM,SAASqS,UAAU,SAA9C,UACG,cAAC9P,EAAA,EAAD,CAAMC,KAAK,cAAcxC,MAAM,WADlC,sBAIA,cAACuI,EAAA,EAAD,CAAMxI,KAAK,QAAQyI,SAAU3G,KAAKuE,aAAlC,SACI,eAAC6E,EAAA,EAAD,CAASuH,SAAO,EAAhB,UACI,cAACjK,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACnG,KAAK,QAAQhD,KAAK,OAAOiT,aAAa,OAAOnH,YAAY,gBAAgBzC,SAAUhH,KAAKsF,aAAc3D,KAAK,QAAQ6D,MAAOsK,EAAOzJ,UAAWrG,KAAK6Q,iBAAiBzF,EAAO,WAE3L,cAAC1E,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACnG,KAAK,WAAWhD,KAAK,OAAOiT,aAAa,OAAOnH,YAAY,WAAWzC,SAAUhH,KAAKsF,aAAc3D,KAAK,WAAW6D,MAAOuK,EAAU1J,UAAWrG,KAAK6Q,iBAAiBzF,EAAO,cAG/L,cAACnN,EAAA,EAAD,CAAQuB,SAAUgK,EAASnD,UAAWmD,EAAU,UAAY,GAAIrL,MAAM,SAAS2I,OAAK,EAAC5I,KAAK,QAA1F,0BAILkN,EAAO/G,OAAS,GACb,eAAC,KAAD,CAASe,OAAK,EAAd,UACC,uCACCpF,KAAKoQ,cAAchF,MAG5B,eAAC,KAAD,qCAAgC,cAAC,KAAD,CAAM0F,GAAG,YAAT,oCA/D9C,GAA2B1S,a,qBCiIZ2S,GAhIf,4MACI/R,MAAM,CACFgS,SAAS,GACTlB,MAAM,GACNC,SAAS,GACTkB,qBAAqB,GACrB7F,OAAO,GACP5B,SAAS,EACT0H,QAAS7S,EAAS+D,WAAWC,IAAI,UARzC,EAUK8O,YAAY,YAAmD,IAAjDrB,EAAgD,EAAhDA,MAAMkB,EAA0C,EAA1CA,SAASjB,EAAiC,EAAjCA,SAASkB,EAAwB,EAAxBA,qBAClC,OAASD,EAAS3M,SAAWyL,EAAMzL,SAAW0L,EAAS1L,SAAW4M,EAAqB5M,QAXhG,EAcK+M,gBAAgB,YAAoC,IAAlCrB,EAAiC,EAAjCA,SAASkB,EAAwB,EAAxBA,qBACvB,QAAGlB,EAAS1L,OAAS,GAAK4M,EAAqB5M,OAAS,IAGhD0L,IAAakB,GAlB9B,EA0BIjB,YAAY,WACV,IACI5K,EADAgG,EAAO,GAET,OAAG,EAAK+F,YAAY,EAAKnS,QACrBoG,EAAO,CAAC+F,QAAS,sBACjB,EAAK9H,SAAS,CAAC+H,OAAQA,EAAO/C,OAAOjD,MAC9B,KAEF,EAAKgM,gBAAgB,EAAKpS,SAC/BoG,EAAO,CAAC+F,QAAU,+BAClB,EAAK9H,SAAS,CAAC+H,OAAQA,EAAO/C,OAAOjD,MAC9B,IArCnB,EA2CIE,aAAa,SAACd,GACV,EAAKnB,SAAL,eAAgBmB,EAAMe,OAAO5E,KAAO6D,EAAMe,OAAOC,SA5CzD,EAmDIjB,aAAa,SAAAC,GACTA,EAAMC,iBACH,EAAKuL,gBACJ,EAAK3M,SAAS,CAAC+H,OAAO,GAAG5B,SAAS,IAClCnL,EAASsB,OACR0R,+BAA+B,EAAKrS,MAAM8Q,MAAM,EAAK9Q,MAAM+Q,UAC3DlQ,MAAK,SAAAyR,GACFxR,QAAQC,IAAIuR,GACZA,EAAYrS,KAAKsS,cAAc,CAC3BhS,YAAa,EAAKP,MAAMgS,SACxB/P,SAAS,8BAAD,OAAgCuQ,KAAIF,EAAYrS,KAAK6Q,OAArD,kBAEXjQ,MAAK,WACF,EAAK4R,SAASH,GAAazR,MAAK,WAC5BC,QAAQC,IAAI,oBAGnBmF,OAAM,SAAAC,GACHrF,QAAQsF,MAAMD,GACd,EAAK9B,SAAS,CAAC+H,OAAO,EAAKpM,MAAMoM,OAAO/C,OAAOlD,GAAKqE,SAAQ,UAGnEtE,OAAM,SAAAC,GACHrF,QAAQsF,MAAMD,GACd,EAAK9B,SAAS,CAAC+H,OAAO,EAAKpM,MAAMoM,OAAO/C,OAAOlD,GAAKqE,SAAS,SA3E7E,EAgFQiI,SAAU,SAAAH,GACN,OAAO,EAAKtS,MAAMkS,QAAQnM,MAAMuM,EAAYrS,KAAKmJ,KAAKT,IAAI,CACtDhH,KAAO2Q,EAAYrS,KAAKM,YACxB4B,OAAQmQ,EAAYrS,KAAKgC,YAnFzC,EAwFQmP,cAAe,SAAAhF,GAAM,OACrBA,EAAOrF,KAAI,SAACX,EAAMiL,GAAP,OAAY,4BAAYjL,EAAM+F,SAAVkF,OAzFvC,sDA+CI,SAAiBjF,EAAOkF,GACrB,OAAQlF,EAAOwB,MAAK,SAAAxH,GAAK,OAAEA,EAAM+F,QAAQoF,cAAchG,SAAS+F,MAAc,QAAU,KAhD/F,oBA4FQ,WACI,MAAqEtQ,KAAKhB,MAAnEgS,EAAP,EAAOA,SAASlB,EAAhB,EAAgBA,MAAMC,EAAtB,EAAsBA,SAASkB,EAA/B,EAA+BA,qBAAqB7F,EAApD,EAAoDA,OAAO5B,EAA3D,EAA2DA,QAC3D,OACA,cAACvJ,EAAA,EAAD,CAAMuQ,UAAU,SAASC,cAAc,SAASpK,UAAU,MAA1D,SACE,eAACpG,EAAA,EAAKG,OAAN,CAAaF,MAAO,CAACwQ,SAAS,KAA9B,UACC,eAAClQ,EAAA,EAAD,CAAQ/C,GAAG,KAAKE,MAAI,EAACQ,MAAM,OAAOqS,UAAU,SAA5C,UACG,cAAC9P,EAAA,EAAD,CAAMC,KAAK,eAAexC,MAAM,SADnC,yBAIA,cAACuI,EAAA,EAAD,CAAMxI,KAAK,QAAQyI,SAAU3G,KAAKuE,aAAlC,SACI,eAAC6E,EAAA,EAAD,CAASuH,SAAO,EAAhB,UACI,cAACjK,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACnG,KAAK,WAAWhD,KAAK,OAAOiT,aAAa,OAAOnH,YAAY,WAAWzC,SAAUhH,KAAKsF,aAAc3D,KAAK,OAAO6D,MAAOwL,EAAU3K,UAAWrG,KAAK6Q,iBAAiBzF,EAAO,cAE3L,cAAC1E,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACnG,KAAK,QAAQhD,KAAK,OAAOiT,aAAa,OAAOnH,YAAY,gBAAgBzC,SAAUhH,KAAKsF,aAAc3D,KAAK,QAAQ6D,MAAOsK,EAAOzJ,UAAWrG,KAAK6Q,iBAAiBzF,EAAO,WAE3L,cAAC1E,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACnG,KAAK,WAAWhD,KAAK,OAAOiT,aAAa,OAAOnH,YAAY,WAAWzC,SAAUhH,KAAKsF,aAAc3D,KAAK,WAAW6D,MAAOuK,EAAU1J,UAAWrG,KAAK6Q,iBAAiBzF,EAAO,cAE/L,cAAC1E,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACnG,KAAK,uBAAuBhD,KAAK,SAASiT,aAAa,OAAOnH,YAAY,mBAAmBzC,SAAUhH,KAAKsF,aAAc3D,KAAK,WAAW6D,MAAOyL,EAAsB5K,UAAWrG,KAAK6Q,iBAAiBzF,EAAO,cAEjO,cAACnN,EAAA,EAAD,CAAQuB,SAAUgK,EAASnD,UAAWmD,EAAU,UAAY,GAAIrL,MAAM,OAAO2I,OAAK,EAAC5I,KAAK,QAAxF,yBAILkN,EAAO/G,OAAQ,GACZ,eAAC,KAAD,CAASe,OAAK,EAAd,UACC,uCACCpF,KAAKoQ,cAAchF,MAG5B,eAAC,KAAD,+BAA0B,cAAC,KAAD,CAAM0F,GAAG,SAAT,+BAzHxC,GAA8B1S,a,8CCLxBsT,GAAgB,CACpBvS,YAAa,KACbwS,WAAW,GAoBPC,GAAwB,CAC5B9P,eAAgB,KAChBE,kBAAkB,GAqBP6P,GAAcC,2BAAgB,CACzC7S,KAzCkB,WAAoC,IAAnCD,EAAkC,uDAA1B0S,GAAeK,EAAW,uCACrD,OAAQA,EAAOpQ,MACb,KAAKqQ,EACH,MAAO,CACL7S,YAAa4S,EAAOlQ,QAAQ1C,YAC5BwS,WAAW,GAEf,KAAKK,EACH,OAAO,6BACFhT,GADL,IAEE2S,WAAW,IAEf,QACE,OAAO3S,IA6BX0C,QApBqB,WAA4C,IAA3C1C,EAA0C,uDAAlC4S,GAAuBG,EAAW,uCAChE,OAAQA,EAAOpQ,MACb,KAAKqQ,EACH,OAAO,6BACFhT,GADL,IAEE8C,eAAgBiQ,EAAOlQ,QAAQC,iBAEnC,KAAKkQ,EACH,OAAO,6BACFhT,GADL,IAEEgD,iBAAkB+P,EAAOlQ,QAAQG,mBAErC,QACE,OAAOhD,M,oBCnCEiT,GALD,kBACV,cAACC,GAAA,EAAD,CAAQjM,QAAM,EAAd,SACC,cAACkM,GAAA,EAAD,CAAQjU,KAAK,OAAO6O,QAAQ,yBCa3BqF,GAAMC,uBAAYR,GAAYS,kCAG9BC,G,uKACN,WAAoB,IAAD,OAClBlU,EAASsB,OAAO6S,oBAAmB,SAAAvT,GAE9BA,GACD,EAAKC,MAAMuT,QAAQxT,GACnB,EAAKC,MAAMwT,QAAQvP,KAAK,OAGxB,EAAKjE,MAAMwT,QAAQvP,KAAK,UACxB,EAAKjE,MAAMyT,kB,oBAKd,WACE,OAAO3S,KAAKd,MAAMyS,UAAY,cAAC,GAAD,IAC5B,eAAC,KAAD,WACE,cAAC,KAAD,CAAOiB,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjC,cAAC,KAAD,CAAOF,KAAK,SAASC,UAAWjD,KAChC,cAAC,KAAD,CAAOgD,KAAK,YAAYC,UAAW/B,KACnC,cAAC,KAAD,W,GArBW3S,aA6Bb4U,GAAeC,aAAW/L,aAHV,SAAAlI,GAAK,MAAG,CAC5B2S,UAAW3S,EAAMC,KAAK0S,aAEgC,CAACc,QjBhDlC,SAACxT,GACtB,MAAO,CACL0C,KAAMC,EACNC,QAAS,CACP1C,YAAaF,KiB4C8C0T,UjBvCxC,WACvB,MAAO,CACLhR,KAAMC,KiBqCsBsF,CAA6CqL,KAG7EW,IAASC,OACT,cAAC,IAAD,CAAUf,MAAOA,GAAjB,SACE,cAAC,KAAD,UACC,cAACY,GAAD,QAGHI,SAASC,eAAe,SACxBhE,O","file":"static/js/main.1c65626a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Sidebar, Menu, Divider, Icon, Button } from \"semantic-ui-react\";\r\n\r\nexport class Colorpanel extends Component {\r\n  render() {\r\n    return (\r\n      <Sidebar\r\n        as={Menu}\r\n        icon=\"labeled\"\r\n        inverted\r\n        vertical\r\n        visible\r\n        width=\"very thin\"\r\n      >\r\n        <Divider />\r\n        <Button icon=\"add\" size=\"small\" color=\"blue\" />\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Colorpanel;\r\n","import firebase from \"firebase/app\"\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\nimport 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBp7NMMZnv3dLhc3R_xblCrJWh80sXobo8\",\r\n  authDomain: \"react-slack-clone-4c909.firebaseapp.com\",\r\n  databaseURL: \"https://react-slack-clone-4c909-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"react-slack-clone-4c909\",\r\n  storageBucket: \"react-slack-clone-4c909.appspot.com\",\r\n  messagingSenderId: \"746440793495\",\r\n  appId: \"1:746440793495:web:3ae9974fe926f6e6d778d2\",\r\n  measurementId: \"G-SKVLWJY5S3\"\r\n};\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  export default firebase;","import React, { Component } from 'react';\r\nimport { Dropdown, Grid, Header,Icon,Image} from 'semantic-ui-react';\r\nimport firebase from \"../../firebase\";\r\n\r\n\r\nexport class Userpanel extends Component {\r\n  state={\r\n    user: this.props.currentUser\r\n  }\r\n    Dropdownoptions=()=>[\r\n    {\r\n      key: 'user',  \r\n      text: <span>signed in as <strong>{this.state.user.displayName}</strong></span>,\r\n      disabled: true\r\n    },\r\n    {\r\n        key:'Avatar',\r\n        text:<span>Change Avatar</span>\r\n    },\r\n    { \r\n        key:'signout',\r\n        text:<span onClick={this.handleSignout}>Sign Out</span>\r\n    }\r\n]\r\n\r\nhandleSignout=()=>{\r\nfirebase.auth().signOut()\r\n.then(()=>console.log(\"signed out\"))\r\n}\r\n    render() {\r\n      const {user}= this.state;\r\n        return (\r\n          <Grid style={{background: '#4c3c4c'}}>\r\n            <Grid.Column>\r\n            <Grid.Row style={{padding:'1.2em',margin:0}}>\r\n               <Header inverted floated=\"left\" as='h2'>\r\n                   <Icon name='code'/>\r\n                   <Header.Content>PING ME</Header.Content>\r\n               </Header>\r\n            <Header style={{padding:'0.25em'}} as='h4' inverted>\r\n               <Dropdown trigger={\r\n               <span>\r\n                 <Image src={user.photoURL} spaced='right' avatar/>\r\n                {user.displayName}\r\n                </span>} \r\n                 options={this.Dropdownoptions()}/>\r\n            </Header>\r\n            </Grid.Row>\r\n            </Grid.Column>\r\n          </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Userpanel\r\n","export const SET_USER = \"SET_USER\";\r\nexport const SIGN_OUT_USER = \"SIGN_OUT_USER\";\r\nexport const SET_CURRENT_CHANNEL = \"SET_CURRENT_CHANNEL\";\r\nexport const SET_PRIVATE_CHANNEL = \"SET_PRIVATE_CHANNEL\";\r\n","import * as actionsTypes from \"./actiontypes\";\r\n\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: actionsTypes.SET_USER,\r\n    payload: {\r\n      currentUser: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const clearUser = () => {\r\n  return {\r\n    type: actionsTypes.SIGN_OUT_USER,\r\n  };\r\n};\r\n\r\nexport const setCurrentChannel = (channel) => {\r\n  return {\r\n    type: actionsTypes.SET_CURRENT_CHANNEL,\r\n    payload: {\r\n      currentChannel: channel,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setPrivateChannel = (isPrivateChannel) => {\r\n  return {\r\n    type: actionsTypes.SET_PRIVATE_CHANNEL,\r\n    payload: {\r\n      isPrivateChannel,\r\n    },\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Menu,\r\n  Icon,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\r\n\r\nclass Channels extends Component {\r\n  state = {\r\n    channel: null,\r\n    notifications: [],\r\n    messageRef: firebase.database().ref(\"messages\"),\r\n    activeChannel: \"\",\r\n    firstLoad: true,\r\n    channels: [],\r\n    channelName: \"\",\r\n    channelDetails: \"\",\r\n    modal: false,\r\n    channelRef: firebase.database().ref(\"channels\"),\r\n    user: this.props.currentUser,\r\n  };\r\n\r\n  //listener\r\n  componentDidMount() {\r\n    this.addListener();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListener();\r\n  }\r\n\r\n  removeListener = () => {\r\n    this.state.channelRef.off();\r\n  };\r\n\r\n  addListener = () => {\r\n    let loadedChannels = [];\r\n    this.state.channelRef.on(\"child_added\", (snap) => {\r\n      loadedChannels.push(snap.val());\r\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\r\n      this.addNotificationsListener(snap.key);\r\n    });\r\n  };\r\n  addNotificationsListener = (channelId) => {\r\n    this.state.messageRef.on(\"value\", (snap) => {\r\n      if (this.state.channel) {\r\n        this.handleNotifications(\r\n          channelId,\r\n          this.state.channel.id,\r\n          this.state.notifications,\r\n          snap\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\r\n    let lastTotal = 0;\r\n    let index = notifications.findIndex(\r\n      (notification) => notification.id === channelId\r\n    );\r\n\r\n    if (index !== -1) {\r\n      if (channelId !== currentChannelId) {\r\n        lastTotal = notifications[index].total;\r\n        if (snap.numChildren() - lastTotal > 0) {\r\n          notifications[index].count = snap.numChildren() - lastTotal;\r\n        }\r\n      }\r\n      notifications[index].lastKnownTotal = snap.numChildren();\r\n    } else {\r\n      notifications.push({\r\n        id: channelId,\r\n        total: snap.numChildren(),\r\n        lastKnownTotal: snap.numChildren(),\r\n        count: 0,\r\n      });\r\n    }\r\n    this.setState({ notifications });\r\n  };\r\n\r\n  setFirstChannel = () => {\r\n    const { firstLoad, channels } = this.state;\r\n    const firstChannel = channels[0];\r\n    if (firstLoad && channels.length > 0) {\r\n      this.props.setCurrentChannel(firstChannel);\r\n      this.setActiveChannel(firstChannel);\r\n      this.setState({ channel: firstChannel });\r\n    }\r\n    this.setState({ firstLoad: false });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.isFormValid(this.state)) {\r\n      this.addChannel();\r\n    }\r\n  };\r\n\r\n  addChannel = () => {\r\n    const { channelRef, channelName, channelDetails, user } = this.state;\r\n    const key = channelRef.push().key;\r\n    const newChannel = {\r\n      id: key,\r\n      name: channelName,\r\n      details: channelDetails,\r\n      createdBy: {\r\n        name: user.displayName,\r\n        avatar: user.photoURL,\r\n      },\r\n    };\r\n    channelRef\r\n      .child(key)\r\n      .update(newChannel)\r\n      .then(() => {\r\n        this.setState({ channelName: \"\", channelDetails: \"\" });\r\n        this.closeModal();\r\n        console.log(\"channel added\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  isFormValid = ({ channelName, channelDetails }) =>\r\n    channelName && channelDetails;\r\n\r\n  openModal = () => {\r\n    this.setState({ modal: true });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ modal: false });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  changeChannel = (channel) => {\r\n    this.clearNotifications();\r\n    this.setActiveChannel(channel);\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n    this.setState({ channel });\r\n  };\r\n\r\n  clearNotifications = () => {\r\n    let index = this.state.notifications.findIndex(\r\n      (notification) => notification.id === this.state.channel.id\r\n    );\r\n    if (index !== -1) {\r\n      let updatedNotifications = [...this.state.notifications];\r\n      updatedNotifications[index].total = this.state.notifications[index].total;\r\n      updatedNotifications[index].count = 0;\r\n      this.setState({ notifications: updatedNotifications });\r\n    }\r\n  };\r\n\r\n  setActiveChannel = (channel) => {\r\n    this.setState({ activeChannel: channel.id });\r\n  };\r\n\r\n  getNotificationCount = (channel) => {\r\n    let count = 0;\r\n    this.state.notifications.forEach((notification) => {\r\n      if (notification.id === channel.id) {\r\n        count = notification.count;\r\n      }\r\n    });\r\n    if (count > 0) {\r\n      return count;\r\n    }\r\n  };\r\n\r\n  //display channel\r\n  displayChannels = (channels) =>\r\n    channels.length > 0 &&\r\n    channels.map((channel) => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        active={channel.id === this.state.activeChannel}\r\n        name={channel.name}\r\n        onClick={() => this.changeChannel(channel)}\r\n        style={{ opacity: 0.7 }}\r\n      >\r\n        {this.getNotificationCount(channel) && (\r\n          <Label color=\"red\">{this.getNotificationCount(channel)}</Label>\r\n        )}{\" \"}\r\n        #{channel.name}\r\n      </Menu.Item>\r\n    ));\r\n\r\n  render() {\r\n    const { channels, modal } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Menu.Menu className=\"menu\">\r\n          <Menu.Item>\r\n            <span>\r\n              <Icon name=\"exchange\" /> CHANNELS\r\n            </span>\r\n            {\"  \"}({channels.length}){\" \"}\r\n            <Icon name=\"add\" onClick={this.openModal} />\r\n          </Menu.Item>\r\n          {this.displayChannels(channels)}\r\n        </Menu.Menu>\r\n\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Add a Channel</Modal.Header>\r\n          <Modal.Content>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  name=\"channelName\"\r\n                  label=\"Name of the Channel\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  name=\"channelDetails\"\r\n                  label=\"About the Channel\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\r\n              <Icon name=\"checkmark\" />\r\n              ADD\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" />\r\n              CANCEL\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(\r\n  Channels\r\n);\r\n","import { italic } from \"jest-matcher-utils/node_modules/chalk\";\r\nimport React, { Component } from \"react\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\nimport firebase from \"../../firebase\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nexport class DirectMessages extends Component {\r\n  state = {\r\n    activeChannel: \"\",\r\n    user: this.props.currentUser,\r\n    users: [],\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    connectedRef: firebase.database().ref(\".info/connected\"),\r\n    presenceRef: firebase.database().ref(\"presence\"),\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListeners(this.state.user.uid);\r\n      console.log(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  addListeners = (currentUserUid) => {\r\n    let loadedUsers = [];\r\n    this.state.usersRef.on(\"child_added\", (snap) => {\r\n      if (currentUserUid !== snap.key) {\r\n        let user = snap.val();\r\n        user[\"uid\"] = snap.key;\r\n        user[\"status\"] = \"offline\";\r\n        loadedUsers.push(user);\r\n        this.setState({ users: loadedUsers });\r\n      }\r\n    });\r\n\r\n    this.state.connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val() === true) {\r\n        const ref = this.state.presenceRef.child(currentUserUid);\r\n        ref.set(true);\r\n        ref.onDisconnect().remove((err) => {\r\n          if (err !== null) {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on(\"child_added\", (snap) => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusTousers(snap.key);\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on(\"child_removed\", (snap) => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusTousers(snap.key, false);\r\n      }\r\n    });\r\n  };\r\n\r\n  addStatusTousers = (userId, connected = true) => {\r\n    const updatedUsers = this.state.users.reduce((acc, user) => {\r\n      if (user.uid === userId) {\r\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\r\n      }\r\n      return acc.concat(user);\r\n    }, []);\r\n    this.setState({ users: updatedUsers });\r\n  };\r\n\r\n  IsUserOnline = (user) => user.status === \"online\";\r\n\r\n  changeChannel = (user) => {\r\n    const channelId = this.getUserId(user.uid);\r\n    const channelData = {\r\n      id: channelId,\r\n      name: user.name,\r\n    };\r\n    this.props.setCurrentChannel(channelData);\r\n    this.props.setPrivateChannel(true);\r\n    this.setActiveChannel(user.uid);\r\n  };\r\n\r\n  setActiveChannel = (userId) => {\r\n    this.setState({ activeChannel: userId });\r\n  };\r\n\r\n  getUserId = (userId) => {\r\n    const currentUserId = this.state.user.uid;\r\n    return userId < currentUserId\r\n      ? `${userId}/${currentUserId}`\r\n      : `${currentUserId}/${userId}`;\r\n  };\r\n\r\n  render() {\r\n    const { users, activeChannel } = this.state;\r\n    return (\r\n      <Menu.Menu className=\"menu\">\r\n        <Menu.Item>\r\n          <span>\r\n            <Icon name=\"mail\" /> DIRECT MESSAGES\r\n          </span>{\" \"}\r\n          ({users.length})\r\n        </Menu.Item>\r\n        {users.map((user) => (\r\n          <Menu.Item\r\n            key={user.uid}\r\n            active={user.uid === activeChannel}\r\n            onClick={() => {\r\n              this.changeChannel(user);\r\n            }}\r\n            style={{ opacity: 0.7, fontStyle: italic }}\r\n          >\r\n            <Icon\r\n              name=\"circle\"\r\n              color={this.IsUserOnline(user) ? \"green\" : \"red\"}\r\n            />\r\n            @{user.name}\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu.Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(\r\n  DirectMessages\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport Userpanel from \"./userpanel\";\r\nimport Channels from \"./channels\";\r\nimport DirectMessages from \"./directMessages\";\r\n\r\nexport class Sidepanel extends Component {\r\n  render() {\r\n    const { currentUser } = this.props;\r\n    return (\r\n      <Menu\r\n        size=\"large\"\r\n        vertical\r\n        inverted\r\n        fixed=\"left\"\r\n        style={{ background: \"#4c3c4c\", fontSize: \"1.2rem\" }}\r\n      >\r\n        <Userpanel currentUser={currentUser} />\r\n        <Channels currentUser={currentUser} />\r\n        <DirectMessages currentUser={currentUser} />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidepanel;\r\n","import React, { Component } from \"react\";\r\nimport { Header, Segment, Input, Icon, Search } from \"semantic-ui-react\";\r\nexport class MessageHeader extends Component {\r\n  render() {\r\n    const {\r\n      channelName,\r\n      numUniqueUsers,\r\n      handleSearchChange,\r\n      searchLoading,\r\n      isPrivateChannel,\r\n    } = this.props;\r\n    return (\r\n      <Segment clearing>\r\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\r\n          <span>\r\n            {channelName}\r\n            {!isPrivateChannel && <Icon name={\"star outline\"} color=\"black\" />}\r\n          </span>\r\n          <Header.Subheader>{numUniqueUsers}</Header.Subheader>\r\n        </Header>\r\n\r\n        <Header floated=\"right\">\r\n          <Input\r\n            loading={searchLoading}\r\n            name=\"searchterm\"\r\n            size=\"mini\"\r\n            icon=\"search\"\r\n            placeholder=\"Search Messages\"\r\n            onChange={handleSearchChange}\r\n          />\r\n        </Header>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageHeader;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Input, Button, Icon } from \"semantic-ui-react\";\r\nimport mime from \"mime\";\r\n\r\nexport class FileModal extends Component {\r\n  state = {\r\n    file: null,\r\n    authorized: [\"image/jpeg\", \"image/png\"],\r\n  };\r\n\r\n  addFile = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      this.setState({ file });\r\n    }\r\n  };\r\n\r\n  sendFile = () => {\r\n    const { file } = this.state;\r\n    const { uploadFile, closeModal } = this.props;\r\n\r\n    if (file !== null) {\r\n      if (this.isAuthorized(file.name)) {\r\n        const metadata = { contentType: mime.lookup(file.name) };\r\n        uploadFile(file, metadata);\r\n        closeModal();\r\n        this.clearFile();\r\n      }\r\n    }\r\n  };\r\n\r\n  isAuthorized = (filename) =>\r\n    this.state.authorized.includes(mime.lookup(filename));\r\n\r\n  clearFile = () => this.setState({ file: null });\r\n  render() {\r\n    const { modal, closeModal } = this.props;\r\n    return (\r\n      <Modal basic open={modal} onClose={closeModal}>\r\n        <Modal.Header>Select an image File</Modal.Header>\r\n        <Modal.Content>\r\n          <Input\r\n            onChange={this.addFile}\r\n            label=\"File types : jpg,png\"\r\n            fluid\r\n            type=\"file\"\r\n            name=\"file\"\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color=\"green\" inverted onClick={this.sendFile}>\r\n            <Icon name=\"checkmark\" />\r\n            SEND\r\n          </Button>\r\n          <Button color=\"red\" inverted onClick={closeModal}>\r\n            <Icon name=\"remove\" /> CANCEL\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileModal;\r\n","import { Progress } from \"semantic-ui-react\";\r\n\r\nconst ProgressBar = ({ uploadState, percentUploaded }) =>\r\n  uploadState === \"uploading\" && (\r\n    <Progress\r\n      className=\"progress__bar\"\r\n      percent={percentUploaded}\r\n      progress\r\n      indicating\r\n      size=\"medium\"\r\n      inverted\r\n    />\r\n  );\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { Segment, Button, Input } from \"semantic-ui-react\";\r\nimport FileModal from \"./FileModal\";\r\nimport Progressbar from \"./progressbar\";\r\nimport uuidv4 from \"uuid-v4\";\r\nclass MessageForm extends React.Component {\r\n  state = {\r\n    uploadState: \"\",\r\n    uploadTask: null,\r\n    storageRef: firebase.storage().ref(),\r\n    percentUploaded: 0,\r\n    message: \"\",\r\n    channel: this.props.currentChannel,\r\n    user: this.props.currentUser,\r\n    loading: false,\r\n    errors: [],\r\n    modal: false,\r\n  };\r\n\r\n  getPath = () => {\r\n    if (this.props.isPrivateChannel) {\r\n      return `chat/private-${this.state.channel.id}`;\r\n    } else {\r\n      (\"chat/public\");\r\n    }\r\n  };\r\n\r\n  uploadFile = (file, metadata) => {\r\n    const pathToUpload = this.state.channel.id;\r\n    const ref = this.props.getMessageRefs();\r\n    const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\r\n\r\n    this.setState(\r\n      {\r\n        uploadState: \"uploading\",\r\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata),\r\n      },\r\n      () => {\r\n        this.state.uploadTask.on(\r\n          \"state changed\",\r\n          (snap) => {\r\n            const percentUploaded =\r\n              Math.round(snap.bytesTransferred / snap.totalBytes) * 100;\r\n            this.props.isProgressBar(percentUploaded);\r\n            this.setState({ percentUploaded });\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.setState({\r\n              errors: this.state.errors.concat(err),\r\n              uploadState: \"error\",\r\n              uploadTask: null,\r\n            });\r\n          },\r\n          () => {\r\n            this.state.uploadTask.snapshot.ref\r\n              .getDownloadURL()\r\n              .then((downloadurl) => {\r\n                this.sendFileMessage(downloadurl, pathToUpload, ref);\r\n              })\r\n              .catch((err) => {\r\n                console.error(err);\r\n                this.setState({\r\n                  errors: this.state.errors.concat(err),\r\n                  uploadState: \"error\",\r\n                  uploadTask: null,\r\n                });\r\n              });\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  sendFileMessage = (fileUrl, pathToUpload, ref) => {\r\n    ref\r\n      .child(pathToUpload)\r\n      .push()\r\n      .set(this.createMessage(fileUrl))\r\n      .then(() => {\r\n        this.setState({ uploadState: \"done\" });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        this.setState({\r\n          errors: this.state.errors.concat(err),\r\n        });\r\n      });\r\n  };\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  createMessage = (fileUrl = null) => {\r\n    const message = {\r\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n      user: {\r\n        id: this.state.user.uid,\r\n        name: this.state.user.displayName,\r\n        avatar: this.state.user.photoURL,\r\n      },\r\n    };\r\n    if (fileUrl !== null) {\r\n      message[\"image\"] = fileUrl;\r\n    } else {\r\n      message[\"content\"] = this.state.message;\r\n    }\r\n    return message;\r\n  };\r\n\r\n  sendMessage = () => {\r\n    const { getMessageRefs } = this.props;\r\n    const { message, channel } = this.state;\r\n\r\n    if (message) {\r\n      this.setState({ loading: true });\r\n      getMessageRefs()\r\n        .child(channel.id)\r\n        .push()\r\n        .set(this.createMessage())\r\n        .then(() => {\r\n          this.setState({ loading: false, message: \"\", errors: [] });\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          this.setState({\r\n            loading: false,\r\n            errors: this.state.errors.concat(err),\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errors: this.state.errors.concat({ message: \"Add a message\" }),\r\n      });\r\n    }\r\n  };\r\n  //prettier-ignore\r\n  render() {\r\n    const { errors, message, loading, modal, uploadState, percentUploaded } =\r\n      this.state;\r\n\r\n    return (\r\n      <Segment className=\"message__form\">\r\n        <Input\r\n          fluid\r\n          name=\"message\"\r\n          onChange={this.handleChange}\r\n          value={message}\r\n          style={{ marginBottom: \"0.7em\" }}\r\n          label={<Button icon={\"add\"} />}\r\n          labelPosition=\"left\"\r\n          className={\r\n            errors.some((error) => error.message.includes(\"message\"))\r\n              ? \"error\"\r\n              : \"\"\r\n          }\r\n          placeholder=\"Write your message\"\r\n        />\r\n        <Button.Group icon widths=\"2\">\r\n          <Button\r\n            onClick={this.sendMessage}\r\n            disabled={loading}\r\n            color=\"orange\"\r\n            content=\"Add Reply\"\r\n            labelPosition=\"left\"\r\n            icon=\"edit\"\r\n          />\r\n          <Button\r\n            color=\"teal\"\r\n            onClick={this.openModal}\r\n            disabled={uploadState==='uploading'}\r\n            content=\"Upload Media\"\r\n            labelPosition=\"right\"\r\n            icon=\"cloud upload\"\r\n          />\r\n        </Button.Group>\r\n        <FileModal\r\n          uploadFile={this.uploadFile}\r\n          modal={modal}\r\n          closeModal={this.closeModal}\r\n        />\r\n        <Progressbar\r\n          uploadState={uploadState}\r\n          percentUploaded={percentUploaded}\r\n        />\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageForm;\r\n","import React from \"react\";\r\nimport { Comment, Image } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\n\r\nconst isOwnMessage = (message, user) => {\r\n  return message.user.id === user.uid ? \"message_self\" : \"\";\r\n};\r\nconst isImage = (message) => {\r\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\r\n};\r\nconst timeFromNow = (timestamp) => moment(timestamp).fromNow();\r\n\r\nconst Message = ({ message, user }) => (\r\n  <Comment>\r\n    <Comment.Avatar src={message.user.avatar} />\r\n    <Comment.Content className={isOwnMessage(message, user)}>\r\n      <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\r\n      <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\r\n      {isImage(message) ? (\r\n        <Image src={message.image} className=\"message_image\" />\r\n      ) : (\r\n        <Comment.Text>{message.content}</Comment.Text>\r\n      )}\r\n    </Comment.Content>\r\n  </Comment>\r\n);\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport { Segment, Comment } from \"semantic-ui-react\";\r\nimport MessageHeader from \"./messageHeader\";\r\nimport MessageForm from \"./messageform\";\r\nimport Message from \"./message\";\r\nimport firebase from \"../../firebase\";\r\n\r\nexport class Messages extends Component {\r\n  state = {\r\n    privateChannel: this.props.isPrivateChannel,\r\n    privateMessagesRef: firebase.database().ref(\"PrivateMessages\"),\r\n    messageRef: firebase.database().ref(\"messages\"),\r\n    channel: this.props.currentChannel,\r\n    user: this.props.currentUser,\r\n    messages: [],\r\n    messagesLoading: true,\r\n    progressBar: false,\r\n    numUniqueUsers: \"\",\r\n    searchTerm: \"\",\r\n    searchLoading: false,\r\n    searchResults: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { channel, user } = this.state;\r\n\r\n    if (channel && user) {\r\n      this.addListeners(channel.id);\r\n    }\r\n  }\r\n  addListeners = (channelId) => {\r\n    this.addMessageListener(channelId);\r\n  };\r\n\r\n  addMessageListener = (channelId) => {\r\n    let loadedMessages = [];\r\n    const ref = this.getMessageRefs();\r\n    ref.child(channelId).on(\"child_added\", (snap) => {\r\n      loadedMessages.push(snap.val());\r\n      this.setState({ messages: loadedMessages, messagesLoading: false });\r\n      this.countUniqueUsers(loadedMessages);\r\n    });\r\n  };\r\n\r\n  getMessageRefs = () => {\r\n    const { messageRef, privateMessagesRef, privateChannel } = this.state;\r\n    return privateChannel ? privateMessagesRef : messageRef;\r\n  };\r\n\r\n  countUniqueUsers = (messages) => {\r\n    const uniqueUsers = messages.reduce((acc, message) => {\r\n      if (!acc.includes(message.user.name)) {\r\n        acc.push(message.user.name);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\r\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? \"s\" : \"\"}`;\r\n    this.setState({ numUniqueUsers });\r\n  };\r\n\r\n  displayMessages = (messages) =>\r\n    messages.length > 0 &&\r\n    messages.map((message) => (\r\n      <Message\r\n        key={message.timestamp}\r\n        user={this.state.user}\r\n        message={message}\r\n      />\r\n    ));\r\n\r\n  isProgressBar = (percent) => {\r\n    if (percent > 0) {\r\n      this.setState({ progressBar: true });\r\n    }\r\n  };\r\n\r\n  displayChannel = (channel) => {\r\n    return channel\r\n      ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`\r\n      : \"\";\r\n  };\r\n\r\n  handleSearchChange = (event) => {\r\n    this.setState(\r\n      {\r\n        searchTerm: event.target.value,\r\n        searchLoading: true,\r\n      },\r\n      () => {\r\n        this.handleSearchMessage();\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSearchMessage = () => {\r\n    const channelMessages = [...this.state.messages];\r\n    const regex = new RegExp(this.state.searchTerm, \"gi\");\r\n    const searchResults = channelMessages.reduce((acc, message) => {\r\n      if (\r\n        (message.content && message.content.match(regex)) ||\r\n        message.user.name.match(regex)\r\n      ) {\r\n        acc.push(message);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    this.setState({ searchResults });\r\n    setTimeout(() => {\r\n      this.setState({ searchLoading: false });\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      messageRef,\r\n      channel,\r\n      user,\r\n      messages,\r\n      numUniqueUsers,\r\n      searchTerm,\r\n      searchResults,\r\n      searchLoading,\r\n      privateChannel,\r\n    } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <MessageHeader\r\n          channelName={this.displayChannel(channel)}\r\n          numUniqueUsers={numUniqueUsers}\r\n          handleSearchChange={this.handleSearchChange}\r\n          searchLoading={searchLoading}\r\n          isPrivateChannel={privateChannel}\r\n        />\r\n        <Segment>\r\n          <Comment.Group className=\"messages\">\r\n            {searchTerm\r\n              ? this.displayMessages(searchResults)\r\n              : this.displayMessages(messages)}\r\n          </Comment.Group>\r\n        </Segment>\r\n        <MessageForm\r\n          messageRef={messageRef}\r\n          currentChannel={channel}\r\n          currentUser={user}\r\n          isProgressBar={this.isProgressBar}\r\n          isPrivateChannel={privateChannel}\r\n          getMessageRefs={this.getMessageRefs}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Messages;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Metapanel extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Metapanel\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Metapanel\r\n","/*eslint eqeqeq:0*/\nimport React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport Colorpanel from \"./colorpanel/colorpanel\";\nimport Sidepanel from \"./sidepanel/sidepanel\";\nimport Messages from \"./messages/messages\";\nimport Metapanel from \"./metapanel/metapanel\";\nimport { connect } from \"react-redux\";\n\nconst App = ({ currentUser, currentChannel, isPrivateChannel }) => (\n  <Grid columns=\"equal\" className=\"app\" style={{ background: \"#eee\" }}>\n    <Colorpanel />\n    <Sidepanel key={currentUser && currentUser.id} currentUser={currentUser} />\n    <Grid.Column style={{ marginLeft: 320 }}>\n      <Messages\n        key={currentChannel && currentChannel.id}\n        currentChannel={currentChannel}\n        currentUser={currentUser}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n    <Grid.Column width={4}>\n      <Metapanel />\n    </Grid.Column>\n  </Grid>\n);\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n});\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*eslint-disable */\r\nimport React,{Component} from 'react'\r\nimport {Grid,Segment,Form,Button,Header,Message,Icon} from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from \"../../firebase\";\r\n\r\n\r\nexport class Login extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        errors:[],\r\n        loading: false\r\n    }\r\n    \r\n    handleChange=(event)=>{\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    handleInputError(errors,inputName){\r\n       return  errors.some(error=>error.message.toLowerCase().includes(inputName)) ? 'error' : ''\r\n    }\r\n\r\n    isFormvalid=({email,password})=> email && password;\r\n    \r\n    handleSubmit=event=>{\r\n        event.preventDefault();\r\n        if(this.isFormvalid(this.state)){\r\n            this.setState({errors:[],loading: true})\r\n            firebase.auth()\r\n            .signInWithEmailAndPassword(this.state.email,this.state.password)\r\n            .then(signedInUser=>{\r\n                console.log(signedInUser)\r\n            })\r\n            .catch(err=>{\r\n                console.error(err);\r\n                this.setState({erros : this.state.errors.concat(err),loading:false})\r\n            })\r\n        }}\r\n\r\n    displayErrors= errors =>\r\n        errors.map((error,i)=> <p key={i}>{error.message}</p>)\r\n\r\n\r\n        render() {\r\n            const {email,password,errors,loading} =this.state;\r\n            return (\r\n            <Grid textAlign='center' verticalAlign='middle' className='app'>\r\n              <Grid.Column style={{maxWidth:450}}>\r\n               <Header as='h2' icon color='violet' textAlign='center'>\r\n                  <Icon name=\"code branch\" color=\"violet\"/>\r\n                  LOGIN FOR PINGME\r\n               </Header>\r\n               <Form size=\"large\" onSubmit={this.handleSubmit}>\r\n                   <Segment stacked>\r\n                       <Form.Input fluid name='email' icon='mail' iconPosition=\"left\" placeholder=\"Email address\" onChange={this.handleChange} type=\"email\" value={email} className={this.handleInputError(errors,'email')}/>\r\n\r\n                       <Form.Input fluid name='password' icon='lock' iconPosition=\"left\" placeholder=\"password\" onChange={this.handleChange} type=\"password\" value={password} className={this.handleInputError(errors,'password')}/>\r\n\r\n\r\n                       <Button disabled={loading} className={loading ? 'loading' : ''} color='violet' fluid size='large'>SIGN IN</Button>\r\n\r\n                   </Segment>\r\n              </Form>  \r\n                 {errors.length > 0 && (\r\n                     <Message error>\r\n                      <h3>error</h3>\r\n                      {this.displayErrors(errors)}\r\n                     </Message>\r\n                 )}\r\n              <Message>Dont have an account?  <Link to='/register'>  Register</Link></Message>      \r\n            </Grid.Column>\r\n         </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;\r\n\r\n","/*eslint-disable */\r\nimport React,{Component} from 'react'\r\nimport {Grid,Segment,Form,Button,Header,Message,Icon} from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from \"../../firebase\";\r\nimport md5 from 'md5';\r\n\r\n\r\nexport class Register extends Component {\r\n    state={\r\n        username:'',\r\n        email:'',\r\n        password:'',\r\n        passwordConfirmation:'',\r\n        errors:[],\r\n        loading: false,\r\n        userRef: firebase.database().ref('users')\r\n    }\r\n     isFormEmpty=({email,username,password,passwordConfirmation})=>{\r\n         return (!username.length || !email.length || !password.length || !passwordConfirmation.length)\r\n     }\r\n\r\n     isPasswordValid=({password,passwordConfirmation})=>{\r\n         if(password.length < 6 || passwordConfirmation.length < 6){\r\n             return false;\r\n         }\r\n         else if(password !== passwordConfirmation){\r\n             return false;\r\n         }\r\n         else{\r\n             return true\r\n         }\r\n     }\r\n\r\n    isFormvalid=()=>{\r\n      let errors=[];\r\n      let error;\r\n        if(this.isFormEmpty(this.state)){\r\n            error= {message: 'Fill in all fields'}\r\n            this.setState({errors: errors.concat(error)})\r\n            return false;\r\n        }\r\n        else if(!this.isPasswordValid(this.state)){\r\n            error ={message : 'Entered password is invalid'}\r\n            this.setState({errors: errors.concat(error)})\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n    handleChange=(event)=>{\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    handleInputError(errors,inputName){\r\n       return  errors.some(error=>error.message.toLowerCase().includes(inputName)) ? 'error' : ''\r\n    }\r\n    \r\n    handleSubmit=event=>{\r\n        event.preventDefault();\r\n        if(this.isFormvalid()){\r\n            this.setState({errors:[],loading: true})\r\n            firebase.auth()\r\n            .createUserWithEmailAndPassword(this.state.email,this.state.password)\r\n            .then(createdUser=>{\r\n                console.log(createdUser)\r\n                createdUser.user.updateProfile({\r\n                    displayName: this.state.username,\r\n                    photoURL: `http://gravatar.com/avatar/${md5(createdUser.user.email)}?d=identicon`\r\n                })\r\n                .then(()=>{\r\n                    this.saveUser(createdUser).then(()=>{\r\n                        console.log('user saved')\r\n                    })\r\n                })\r\n                .catch(err=>{\r\n                    console.error(err)\r\n                    this.setState({errors:this.state.errors.concat(err),loading:false})\r\n                })\r\n            })\r\n            .catch(err =>{\r\n                console.error(err)\r\n                this.setState({errors:this.state.errors.concat(err),loading: false})\r\n            })\r\n        }}\r\n\r\n\r\n        saveUser= createdUser => {\r\n            return this.state.userRef.child(createdUser.user.uid).set({\r\n                name:  createdUser.user.displayName,\r\n                avatar: createdUser.user.photoURL\r\n            });\r\n        }\r\n\r\n\r\n        displayErrors= errors =>\r\n        errors.map((error,i)=> <p key={i}>{error.message}</p>)\r\n\r\n\r\n        render() {\r\n            const {username,email,password,passwordConfirmation,errors,loading} =this.state;\r\n            return (\r\n            <Grid textAlign='center' verticalAlign='middle' className='app'>\r\n              <Grid.Column style={{maxWidth:450}}>\r\n               <Header as='h2' icon color='blue' textAlign='center'>\r\n                  <Icon name=\"puzzle piece\" color=\"blue\"/>\r\n                  REGISTER FOR PINGME\r\n               </Header>\r\n               <Form size=\"large\" onSubmit={this.handleSubmit}>\r\n                   <Segment stacked>\r\n                       <Form.Input fluid name='username' icon='user' iconPosition=\"left\" placeholder=\"Username\" onChange={this.handleChange} type=\"text\" value={username} className={this.handleInputError(errors,'username')}/>\r\n\r\n                       <Form.Input fluid name='email' icon='mail' iconPosition=\"left\" placeholder=\"Email address\" onChange={this.handleChange} type=\"email\" value={email} className={this.handleInputError(errors,'email')}/>\r\n\r\n                       <Form.Input fluid name='password' icon='lock' iconPosition=\"left\" placeholder=\"password\" onChange={this.handleChange} type=\"password\" value={password} className={this.handleInputError(errors,'password')}/>\r\n\r\n                       <Form.Input fluid name='passwordConfirmation' icon='repeat' iconPosition=\"left\" placeholder=\"Confirm Password\" onChange={this.handleChange} type=\"password\" value={passwordConfirmation} className={this.handleInputError(errors,'password')}/>\r\n\r\n                       <Button disabled={loading} className={loading ? 'loading' : ''} color='blue' fluid size='large'>SUBMIT</Button>\r\n\r\n                   </Segment>\r\n              </Form>  \r\n                 {errors.length >0 && (\r\n                     <Message error>\r\n                      <h3>error</h3>\r\n                      {this.displayErrors(errors)}\r\n                     </Message>\r\n                 )}\r\n              <Message>Already a user ? <Link to='/login'>Login</Link></Message>      \r\n            </Grid.Column>\r\n         </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n","import * as actionTypes from \"../actions/actiontypes\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: null,\r\n  isLoading: true,\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        currentUser: action.payload.currentUser,\r\n        isLoading: false,\r\n      };\r\n    case actionTypes.SIGN_OUT_USER:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst INITIAL_CHANNEL_STATE = {\r\n  currentChannel: null,\r\n  isPrivateChannel: false,\r\n};\r\n\r\nconst channelReducer = (state = INITIAL_CHANNEL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_CURRENT_CHANNEL:\r\n      return {\r\n        ...state,\r\n        currentChannel: action.payload.currentChannel,\r\n      };\r\n    case actionTypes.SET_PRIVATE_CHANNEL:\r\n      return {\r\n        ...state,\r\n        isPrivateChannel: action.payload.isPrivateChannel,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n  user: userReducer,\r\n  channel: channelReducer,\r\n});\r\n","import React from 'react';\r\nimport { Loader,Dimmer } from 'semantic-ui-react';\r\n\r\nconst Spinner=()=>(\r\n    <Dimmer active>\r\n     <Loader size='huge' content=\"preparing chat...\"/>\r\n    </Dimmer>\r\n)\r\nexport default Spinner;","/*eslint eqeqeq:0*/\nimport React,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals';\nimport Login from './components/Auth/login';\nimport Register from './components/Auth/register';\nimport {BrowserRouter as Router,Route,Switch,withRouter} from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css'\nimport firebase from \"./firebase\";\nimport {createStore} from 'redux';\nimport {Provider,connect} from 'react-redux'\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport { rootReducer } from './reducers/index'; \nimport { setUser,clearUser} from './actions';\nimport Spinner from './spinner';\n\n\nconst store=createStore(rootReducer,composeWithDevTools())\n\n\nclass Root extends Component{\ncomponentDidMount(){\n firebase.auth().onAuthStateChanged(user=>\n  {\n   if(user){\n     this.props.setUser(user)\n     this.props.history.push('/');\n   }\n   else{\n     this.props.history.push('/login');\n     this.props.clearUser();\n   }\n  })\n}\n\n  render(){\n    return this.props.isLoading ? <Spinner/> :(\n      <Switch>\n        <Route exact path='/' component={App}/>\n        <Route path='/login' component={Login} />\n        <Route path='/register' component={Register} />\n        <Route/>\n      </Switch>\n    )\n  }\n}\nconst mapStateToProps=state=>({\n  isLoading: state.user.isLoading\n})\nconst RootWithAuth = withRouter(connect(mapStateToProps,{setUser,clearUser})(Root))\n\n\nReactDOM.render(\n<Provider store={store}>\n  <Router>\n   <RootWithAuth/>\n  </Router>\n</Provider>,\ndocument.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}